<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/components/UserBar.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/UserBar.css" />
              <option name="updatedContent" value="/* ...existing code... */&#10;.user-bar {&#10;  width: 48px; /* 假设用户栏宽度为48px，可根据实际情况调整 */&#10;  height: 48px;&#10;  /* ...existing code... */&#10;}&#10;&#10;.user-bar-buttons {&#10;  display: flex;&#10;  align-items: center;&#10;  height: 48px; /* 与用户栏高度一致 */&#10;}&#10;&#10;.user-bar-button {&#10;  width: 48px;&#10;  height: 48px;&#10;  display: flex;&#10;  align-items: center;&#10;  justify-content: center;&#10;  margin: 0; /* 去除间距，确保上下边界重合 */&#10;  padding: 0;&#10;  box-sizing: border-box;&#10;  /* ...existing code... */&#10;}&#10;&#10;.user-bar-button img {&#10;  width: 24px;&#10;  height: 24px;&#10;  object-fit: contain;&#10;}&#10;/* ...existing code... */&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/UserBar.jsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/UserBar.jsx" />
              <option name="updatedContent" value="// ...existing code...&#10;&lt;div className=&quot;user-bar&quot;&gt;&#10;  {/* ...existing code... */}&#10;  &lt;div className=&quot;user-bar-buttons&quot;&gt;&#10;    &lt;button className=&quot;user-bar-button&quot;&gt;&#10;      &lt;img src=&quot;icon1.png&quot; alt=&quot;按钮1&quot; /&gt;&#10;    &lt;/button&gt;&#10;    &lt;button className=&quot;user-bar-button&quot;&gt;&#10;      &lt;img src=&quot;icon2.png&quot; alt=&quot;按钮2&quot; /&gt;&#10;    &lt;/button&gt;&#10;    &lt;button className=&quot;user-bar-button&quot;&gt;&#10;      &lt;img src=&quot;icon3.png&quot; alt=&quot;按钮3&quot; /&gt;&#10;    &lt;/button&gt;&#10;  &lt;/div&gt;&#10;  {/* ...existing code... */}&#10;&lt;/div&gt;&#10;// ...existing code...&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/Client/LogoutHandler.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/Client/LogoutHandler.java" />
              <option name="originalContent" value="package Client;&#10;&#10;/**&#10; * 包装类：实际实现已迁移至 Client.login.LogoutHandler。&#10; * 仅为兼容旧引用保留，后续可移除。 &#10; * 使用请改为引用 Client.login.LogoutHandler。 &#10; * @author Msgo-srAm&#10; */&#10;@Deprecated&#10;public class LogoutHandler extends Client.login.LogoutHandler {&#10;}&#10;" />
              <option name="updatedContent" value="package Client;&#10;&#10;// 已移除：原退出处理类迁移至 Client.login.LogoutHandler。&#10;// 请使用 Client.login.LogoutHandler。此文件为过渡占位，可后续物理删除。" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/Server/service/course/StudentTeachingClassService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/Server/service/course/StudentTeachingClassService.java" />
              <option name="originalContent" value="package Server.service.course;&#10;&#10;import Server.dao.course.CourseMapper;&#10;import Server.dao.course.StudentTeachingClassMapper;&#10;import Server.model.course.StudentTeachingClass;&#10;import Server.util.DatabaseUtil;&#10;import org.apache.ibatis.session.SqlSession;&#10;//import org.springframework.beans.factory.annotation.Autowired;&#10;//import org.springframework.stereotype.Service;&#10;//import org.springframework.transaction.annotation.Transactional;&#10;&#10;import java.util.List;&#10;&#10;public class StudentTeachingClassService {&#10;&#10;    private StudentTeachingClassMapper studentTeachingClassMapper;&#10;&#10;    public StudentTeachingClassService() {&#10;        SqlSession sqlSession = DatabaseUtil.getSqlSession();&#10;        this.studentTeachingClassMapper = sqlSession.getMapper(StudentTeachingClassMapper.class);&#10;    }&#10;&#10;    public List&lt;StudentTeachingClass&gt; findByStudentCardNumber(Integer studentCardNumber) {&#10;        try {&#10;            return studentTeachingClassMapper.findByStudentCardNumber(studentCardNumber);&#10;        } catch (Exception e) {&#10;            System.err.println(&quot;查询学生选课失败: &quot; + e.getMessage());&#10;            return null;&#10;        }&#10;    }&#10;&#10;    public List&lt;StudentTeachingClass&gt; findByTeachingClassUuid(String teachingClassUuid) {&#10;        try {&#10;            return studentTeachingClassMapper.findByTeachingClassUuid(teachingClassUuid);&#10;        } catch (Exception e) {&#10;            System.err.println(&quot;查询教学班选课学生失败: &quot; + e.getMessage());&#10;            return null;&#10;        }&#10;    }&#10;&#10;    public StudentTeachingClass findByStudentAndTeachingClass(Integer studentCardNumber, String teachingClassUuid) {&#10;        try {&#10;            return studentTeachingClassMapper.findByStudentAndTeachingClass(studentCardNumber, teachingClassUuid);&#10;        } catch (Exception e) {&#10;            System.err.println(&quot;查询选课关系失败: &quot; + e.getMessage());&#10;            return null;&#10;        }&#10;    }&#10;&#10;    public boolean addStudentTeachingClass(StudentTeachingClass studentTeachingClass) {&#10;        try {&#10;            int result = studentTeachingClassMapper.insertStudentTeachingClass(studentTeachingClass);&#10;            return result &gt; 0;&#10;        } catch (Exception e) {&#10;            System.err.println(&quot;添加选课关系失败: &quot; + e.getMessage());&#10;            return false;&#10;        }&#10;    }&#10;&#10;    public boolean deleteStudentTeachingClass(Integer studentCardNumber, String teachingClassUuid) {&#10;        try {&#10;            int result = studentTeachingClassMapper.deleteStudentTeachingClass(studentCardNumber, teachingClassUuid);&#10;            return result &gt; 0;&#10;        } catch (Exception e) {&#10;            System.err.println(&quot;删除选课关系失败: &quot; + e.getMessage());&#10;            return false;&#10;        }&#10;    }&#10;&#10;    public int countByTeachingClassUuid(String teachingClassUuid) {&#10;        try {&#10;            return studentTeachingClassMapper.countByTeachingClassUuid(teachingClassUuid);&#10;        } catch (Exception e) {&#10;            System.err.println(&quot;统计教学班选课人数失败: &quot; + e.getMessage());&#10;            return -1;&#10;        }&#10;    }&#10;&#10;    public int countByStudentCardNumber(Integer studentCardNumber) {&#10;        try {&#10;            return studentTeachingClassMapper.countByStudentCardNumber(studentCardNumber);&#10;        } catch (Exception e) {&#10;            System.err.println(&quot;统计学生选课数量失败: &quot; + e.getMessage());&#10;            return -1;&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package Server.service.course;&#10;&#10;import Server.dao.course.StudentTeachingClassMapper;&#10;import Server.model.course.StudentTeachingClass;&#10;import Server.util.DatabaseUtil;&#10;import org.apache.ibatis.session.SqlSession;&#10;&#10;import java.util.List;&#10;&#10;public class StudentTeachingClassService {&#10;&#10;    public StudentTeachingClassService() {&#10;        // 无状态服务，SqlSession 在每个方法中按需获取并关闭，避免连接泄露&#10;    }&#10;&#10;    public List&lt;StudentTeachingClass&gt; findByStudentCardNumber(Integer studentCardNumber) {&#10;        try (SqlSession sqlSession = DatabaseUtil.getSqlSession()) {&#10;            StudentTeachingClassMapper mapper = sqlSession.getMapper(StudentTeachingClassMapper.class);&#10;            return mapper.findByStudentCardNumber(studentCardNumber);&#10;        } catch (Exception e) {&#10;            System.err.println(&quot;查询学生选课失败: &quot; + e.getMessage());&#10;            return null;&#10;        }&#10;    }&#10;&#10;    public List&lt;StudentTeachingClass&gt; findByTeachingClassUuid(String teachingClassUuid) {&#10;        try (SqlSession sqlSession = DatabaseUtil.getSqlSession()) {&#10;            StudentTeachingClassMapper mapper = sqlSession.getMapper(StudentTeachingClassMapper.class);&#10;            return mapper.findByTeachingClassUuid(teachingClassUuid);&#10;        } catch (Exception e) {&#10;            System.err.println(&quot;查询教学班选课学生失败: &quot; + e.getMessage());&#10;            return null;&#10;        }&#10;    }&#10;&#10;    public StudentTeachingClass findByStudentAndTeachingClass(Integer studentCardNumber, String teachingClassUuid) {&#10;        try (SqlSession sqlSession = DatabaseUtil.getSqlSession()) {&#10;            StudentTeachingClassMapper mapper = sqlSession.getMapper(StudentTeachingClassMapper.class);&#10;            return mapper.findByStudentAndTeachingClass(studentCardNumber, teachingClassUuid);&#10;        } catch (Exception e) {&#10;            System.err.println(&quot;查询选课关系失败: &quot; + e.getMessage());&#10;            return null;&#10;        }&#10;    }&#10;&#10;    public boolean addStudentTeachingClass(StudentTeachingClass studentTeachingClass) {&#10;        try (SqlSession sqlSession = DatabaseUtil.getSqlSession()) {&#10;            StudentTeachingClassMapper mapper = sqlSession.getMapper(StudentTeachingClassMapper.class);&#10;            int result = mapper.insertStudentTeachingClass(studentTeachingClass);&#10;            return result &gt; 0;&#10;        } catch (Exception e) {&#10;            System.err.println(&quot;添加选课关系失败: &quot; + e.getMessage());&#10;            return false;&#10;        }&#10;    }&#10;&#10;    public boolean deleteStudentTeachingClass(Integer studentCardNumber, String teachingClassUuid) {&#10;        try (SqlSession sqlSession = DatabaseUtil.getSqlSession()) {&#10;            StudentTeachingClassMapper mapper = sqlSession.getMapper(StudentTeachingClassMapper.class);&#10;            int result = mapper.deleteStudentTeachingClass(studentCardNumber, teachingClassUuid);&#10;            return result &gt; 0;&#10;        } catch (Exception e) {&#10;            System.err.println(&quot;删除选课关系失败: &quot; + e.getMessage());&#10;            return false;&#10;        }&#10;    }&#10;&#10;    public int countByTeachingClassUuid(String teachingClassUuid) {&#10;        try (SqlSession sqlSession = DatabaseUtil.getSqlSession()) {&#10;            StudentTeachingClassMapper mapper = sqlSession.getMapper(StudentTeachingClassMapper.class);&#10;            return mapper.countByTeachingClassUuid(teachingClassUuid);&#10;        } catch (Exception e) {&#10;            System.err.println(&quot;统计教学班选课人数失败: &quot; + e.getMessage());&#10;            return -1;&#10;        }&#10;    }&#10;&#10;    public int countByStudentCardNumber(Integer studentCardNumber) {&#10;        try (SqlSession sqlSession = DatabaseUtil.getSqlSession()) {&#10;            StudentTeachingClassMapper mapper = sqlSession.getMapper(StudentTeachingClassMapper.class);&#10;            return mapper.countByStudentCardNumber(studentCardNumber);&#10;        } catch (Exception e) {&#10;            System.err.println(&quot;统计学生选课数量失败: &quot; + e.getMessage());&#10;            return -1;&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/resources/styles/window-buttons.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/resources/styles/window-buttons.css" />
              <option name="updatedContent" value="// ...existing code...&#10;&#10;.minimize-btn:hover,&#10;.maximize-btn:hover {&#10;    filter: brightness(1.3);&#10;}&#10;&#10;.close-btn:hover {&#10;    background-color: #e74c3c;&#10;    filter: none;&#10;}&#10;&#10;// ...existing code...&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test_gson.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/test_gson.java" />
              <option name="updatedContent" value="import Server.model.Request;&#10;import com.google.gson.Gson;&#10;import java.util.HashMap;&#10;import java.util.Map;&#10;&#10;public class test_gson {&#10;    public static void main(String[] args) {&#10;        Gson gson = new Gson();&#10;        Map&lt;String,Object&gt; data = new HashMap&lt;&gt;();&#10;        data.put(&quot;cardNumber&quot;, 213232556);&#10;        data.put(&quot;id&quot;, &quot;1&quot;);&#10;        &#10;        Request request = new Request(&quot;forgetPwd&quot;, data);&#10;        String json = gson.toJson(request);&#10;        System.out.println(&quot;Serialized JSON: &quot; + json);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>